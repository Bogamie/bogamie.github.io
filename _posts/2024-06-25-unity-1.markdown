---
layout: post
title:  "유니티 C# 기본 문법 정리"
date:   2024-06-25 19:45:40 +0900
categories: Unity

published: true
---

## 1. 변수

```c#
int num = 5;            // 정수
float strength = 0.25f; // 실수
string name = "홍길동"; // 문자열
bool flag = true;       // Boolean
```

`float` 타입의 리터럴을 정의할 때는 값 뒤에 `f` 또는 `F`를 붙여줘야 한다.

## 2. 배열

```c#
string[] players = { "홍길동", "철수", "영희" };
int[] playerLevel = new int[3];

for (int i = 0; i < players.Length; i++) {
  playerLevel[i] = 4 * (i + 1);
}

for (int i = 0; i < players.Length; i++) {
  Debug.Log(players[i] + "레벨: " + playerLevel[i]);
}
```

**결과화면**

```
홍길동레벨: 4
철수레벨: 8
영희레벨: 12
```

## 3. 리스트

### 선언

```c#
List<string> items = new List<string>();
```

### 추가

```c#
names.Add("홍길동");
names.Add("철수");
```

### 삭제

```c#
names.RemoveAt(0);
```

0번 인덱스의 '홍길동'이 삭제되고 '철수'만 남는다.

## 4. 연산자

```c#
+ // 합
- // 차
* // 곱셈
/ // 나눗셈
% // 나머지
```

### 비교 연산자

```c#
==
>
<
<=
>=
```

### 논리 연산자

```c#
&& // and
|| // or
!  // not
```

### 삼항 연산자

```c#
string str = flag ? "A" : " B"; // (bool 타입 변수) ? (true일 때) : (false일 때)
```

## 5. 조건문

### if문

```c#
if ( 조건1 ) {
  ···
}
else if ( 조건2 ){
  ···
} 
else {
  ···
}
```

### switch-case문

```c#
switch (변수) {
  case 값1:
    ···
    break;
  case 값2:
    ···
    break;
  default:
}
```

### while문

```c#
while (조건문) {
  반복 문장
}
```

### for문

```c#
for (int n = 0; n < 10; n++) {
  반복 문장
}
```

#### 그룹형 변수 응용

##### 배열

```c#
for (int i = 0; i < players.Length; i++) {
  ··· 
}
```

##### 리스트

```c#
for (int i = 0; i < players.Count; i++) {
  ···
}
```

#### foreach문

```c#
foreach (string player in players) {
  Debug.Log("플레이어 이름: " + player);
}
```

## 6. 함수(메소드)

```c#
int Add(int a, int b) {
  return a + b;
}
```

## 7. 클래스

### 클래스 생성

```c#
public class Counter {
    public int count;

    public int getCount () { 
        return count; 
    }

    public int increment() {
        return ++count;
    }

    public int decrement() { 
        return --count; 
    }
}
```

### 인스턴스 생성

```c#
Counter count = new Counter(); // 인스턴스 생성

count.count = 1;

count.getCount(); // count = 1
count.increment(); // count = 2
count.decrement(); // count = 1
```

## 8. 상속

```c#
public class Math : Counter {
  ···
}
```